/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Expense } from "./interfaces/expense";
export { Expense } from "./interfaces/expense";
export namespace Components {
    interface AppButton {
        "content": string;
        "loading": boolean;
        "onClick": any;
    }
    interface AppExpensesForm {
        "updatingData": Expense;
    }
    interface AppExpensesList {
        "list": Expense[];
    }
    interface AppInput {
        "id": string;
        "label": string;
        "name": string;
        "onChange": any;
        "required": boolean;
        "type": string;
        "value": string;
    }
    interface AppRoot {
    }
}
export interface AppExpensesFormCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLAppExpensesFormElement;
}
export interface AppExpensesListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLAppExpensesListElement;
}
declare global {
    interface HTMLAppButtonElement extends Components.AppButton, HTMLStencilElement {
    }
    var HTMLAppButtonElement: {
        prototype: HTMLAppButtonElement;
        new (): HTMLAppButtonElement;
    };
    interface HTMLAppExpensesFormElement extends Components.AppExpensesForm, HTMLStencilElement {
    }
    var HTMLAppExpensesFormElement: {
        prototype: HTMLAppExpensesFormElement;
        new (): HTMLAppExpensesFormElement;
    };
    interface HTMLAppExpensesListElement extends Components.AppExpensesList, HTMLStencilElement {
    }
    var HTMLAppExpensesListElement: {
        prototype: HTMLAppExpensesListElement;
        new (): HTMLAppExpensesListElement;
    };
    interface HTMLAppInputElement extends Components.AppInput, HTMLStencilElement {
    }
    var HTMLAppInputElement: {
        prototype: HTMLAppInputElement;
        new (): HTMLAppInputElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLElementTagNameMap {
        "app-button": HTMLAppButtonElement;
        "app-expenses-form": HTMLAppExpensesFormElement;
        "app-expenses-list": HTMLAppExpensesListElement;
        "app-input": HTMLAppInputElement;
        "app-root": HTMLAppRootElement;
    }
}
declare namespace LocalJSX {
    interface AppButton {
        "content"?: string;
        "loading"?: boolean;
        "onClick"?: any;
    }
    interface AppExpensesForm {
        "onUpdateListItem"?: (event: AppExpensesFormCustomEvent<any>) => void;
        "updatingData"?: Expense;
    }
    interface AppExpensesList {
        "list"?: Expense[];
        "onDeleteItem"?: (event: AppExpensesListCustomEvent<any>) => void;
        "onUpdateLinkItem"?: (event: AppExpensesListCustomEvent<any>) => void;
    }
    interface AppInput {
        "id"?: string;
        "label"?: string;
        "name"?: string;
        "onChange"?: any;
        "required"?: boolean;
        "type"?: string;
        "value"?: string;
    }
    interface AppRoot {
    }
    interface IntrinsicElements {
        "app-button": AppButton;
        "app-expenses-form": AppExpensesForm;
        "app-expenses-list": AppExpensesList;
        "app-input": AppInput;
        "app-root": AppRoot;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-button": LocalJSX.AppButton & JSXBase.HTMLAttributes<HTMLAppButtonElement>;
            "app-expenses-form": LocalJSX.AppExpensesForm & JSXBase.HTMLAttributes<HTMLAppExpensesFormElement>;
            "app-expenses-list": LocalJSX.AppExpensesList & JSXBase.HTMLAttributes<HTMLAppExpensesListElement>;
            "app-input": LocalJSX.AppInput & JSXBase.HTMLAttributes<HTMLAppInputElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
        }
    }
}
